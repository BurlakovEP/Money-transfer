{"version":3,"sources":["components/Card/Dropdown/Dropdown.js","components/Card/Card.js","components/Transfer/Transfer.js","components/History/History.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","buttonClick","value","setState","case","state","selectItem","event","content","target","innerHTML","setExpiryDate","className","this","type","key","readOnly","onClick","date","map","item","React","Component","Card","getMonths","months","i","length","String","getYears","year","Date","getFullYear","years","j","fields","Array","keys","cardholder","handleEvent","title","name","onFocus","onChange","onBlur","bind","Transfer","clickHandler","clickCount","click","isValid","setTableRow","placeholder","to","History","header","rows","cell","indexOf","payerNumber","recipientNumber","amount","App","clearState","payerNumber1","payerNumber2","payerNumber3","payerNumber4","expiryMonth","expiryYear","recipientNumber1","recipientNumber2","recipientNumber3","recipientNumber4","setValid","obj","Object","every","setData","field","patternAmount","match","patternCardholder","patternNumber","changeClass","classList","add","parsed","JSON","parse","localStorage","getItem","action","index","push","splice","serial","stringify","setItem","toLocaleDateString","activeClassName","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac576d64.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Dropdown.scss\";\n\nexport default class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      case: false,\n      value: \"\"\n    };\n  }\n\n  buttonClick = value => {\n    if (value === \"hide\") this.setState({ case: false });\n    else this.setState({ case: !this.state.case });\n  };\n\n  selectItem = event => {\n    const content = event.target.innerHTML;\n    this.setState({ value: content });\n    this.buttonClick(\"hide\");\n    this.props.setExpiryDate(content);\n  };\n\n  render() {\n    return (\n      <div className=\"dropdown\">\n        <input\n          className={\n            this.state.value !== \"\"\n              ? \"dropdown__field dropdown__field_valid\"\n              : \"dropdown__field\"\n          }\n          type=\"text\"\n          key={this.state.value}\n          value={this.state.value}\n          readOnly\n        />\n        <button className=\"dropdown__button\" onClick={this.buttonClick}>\n          <span className=\"dropdown__arrow\"></span>\n        </button>\n        {this.state.case && (\n          <ul className=\"dropdown__list\">\n            {this.props.date.map(item => (\n              <li\n                className=\"dropdown__item\"\n                onClick={this.selectItem}\n                key={item}\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Card.scss\";\nimport Dropdown from \"./Dropdown/Dropdown\";\n\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMonths = () => {\n      const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n      for (let i = 0; i < months.length; i++) {\n        if (i < 9) months[i] = \"0\" + months[i];\n        else months[i] = String(months[i]);\n      }\n      return months;\n    };\n\n    this.getYears = () => {\n      const year = new Date().getFullYear();\n      const years = [];\n\n      for (let i = year, j = 0; i < year + 5; i++, j++) {\n        years[j] = i;\n      }\n      return years;\n    };\n\n    this.state = {\n      months: this.getMonths(),\n      years: this.getYears(),\n      fields: [...Array(4).keys()]\n    };\n  }\n\n  render() {\n    const { cardholder, setExpiryDate, handleEvent, title } = this.props;\n    const { months, years, fields } = this.state;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card__title\">{title}</div>\n        {cardholder === true ? (\n          <div className=\"card__requisites\">\n            <div className=\"card__wrapper card__wrapper_number\">\n              <div className=\"card__label\">Номер карты</div>\n              {fields.map(item => (\n                <input\n                  className=\"card__number\"\n                  type=\"text\"\n                  name={`payerNumber${item + 1}`}\n                  onFocus={handleEvent(\"number\", \"focus\")}\n                  onChange={handleEvent(\"number\", \"change\")}\n                  onBlur={handleEvent(\"number\", \"blur\")}\n                  key={item}\n                />\n              ))}\n            </div>\n            <div className=\"card__wrapper\">\n              <div className=\"card__label\">ФИО Держателя</div>\n              <input\n                className=\"card__cardholder\"\n                type=\"text\"\n                onFocus={handleEvent(\"cardholder\", \"focus\")}\n                onChange={handleEvent(\"cardholder\", \"change\")}\n                onBlur={handleEvent(\"cardholder\", \"blur\")}\n              />\n            </div>\n            <div className=\"card__wrapper\">\n              <div className=\"card__label\">Активна до</div>\n              <Dropdown\n                date={months}\n                setExpiryDate={setExpiryDate.bind(this, \"month\")}\n                handleEvent={handleEvent}\n              />\n              <Dropdown\n                date={years}\n                setExpiryDate={setExpiryDate.bind(this, \"year\")}\n                handleEvent={handleEvent}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"card__requisites\">\n            <div className=\"card__wrapper card__wrapper_number\">\n              {fields.map(item => (\n                <input\n                  className=\"card__number\"\n                  type=\"text\"\n                  name={`recipientNumber${item + 1}`}\n                  onFocus={handleEvent(\"number\", \"focus\")}\n                  onChange={handleEvent(\"number\", \"change\")}\n                  onBlur={handleEvent(\"number\", \"blur\")}\n                  key={item}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Transfer.scss\";\nimport Card from \"../Card/Card\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class Transfer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      click: 0\n    };\n  }\n\n  clickHandler = () => {\n    let clickCount = this.state.click;\n    if (this.props.state.isValid) this.props.setTableRow(\"add\");\n    else this.setState({ click: (clickCount += 1) });\n  };\n\n  render() {\n    const { state, handleEvent, setExpiryDate } = this.props;\n\n    return (\n      <div className=\"transfer\">\n        <div className=\"transfer__content\">\n          {this.state.click > 0 && !state.isValid && (\n            <div className=\"transfer__message\">Не все реквизиты заполнены!</div>\n          )}\n          <div className=\"transfer__form transfer__form_cards\">\n            <Card\n              title=\"Карта плательщика\"\n              cardholder={true}\n              handleEvent={handleEvent}\n              setExpiryDate={setExpiryDate}\n            />\n            <Card\n              title=\"Карта получателя\"\n              cardholder={false}\n              handleEvent={handleEvent}\n            />\n          </div>\n          <div className=\"transfer__form transfer__form_transfer\">\n            <input\n              className=\"transfer__amount\"\n              type=\"text\"\n              placeholder=\"Сумма\"\n              onFocus={handleEvent(\"amount\", \"focus\")}\n              onChange={handleEvent(\"amount\", \"change\")}\n              onBlur={handleEvent(\"amount\", \"blur\")}\n            />\n            <NavLink\n              className=\"transfer__button\"\n              to={state.isValid ? \"/history\" : \"/transfer\"}\n              onClick={this.clickHandler}\n            >\n              Перевести\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./History.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class History extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      header: [\n        \"№\",\n        \"Карта плательщика\",\n        \"Карта получателя\",\n        \"Сумма\",\n        \"Дата выполнения\",\n        \"Действие\"\n      ]\n    };\n  }\n  render() {\n    const { rows } = this.props.state;\n    const { header } = this.state;\n\n    return (\n      <table className=\"table\">\n        <thead className=\"table__header\">\n          <tr className=\"table__row\">\n            {header.map(cell => (\n              <td\n                className=\"table__cell table__cell_header\"\n                key={header.indexOf(cell)}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        </thead>\n        <tbody className=\"table__body\">\n          {rows.map(cell => (\n            <tr className=\"table__row\" key={rows.indexOf(cell)}>\n              <td className=\"table__cell\">{rows.indexOf(cell) + 1}</td>\n              <td className=\"table__cell\">{cell.payerNumber}</td>\n              <td className=\"table__cell\">{cell.recipientNumber}</td>\n              <td className=\"table__cell\">{cell.amount}</td>\n              <td className=\"table__cell\">{cell.date}</td>\n              <td className=\"table__cell\">\n                <NavLink className=\"table__button\" to=\"/transfer\">\n                  Повторить\n                </NavLink>\n                <button\n                  className=\"table__button\"\n                  onClick={this.props.setTableRow.bind(\n                    this,\n                    \"remove\",\n                    rows.indexOf(cell)\n                  )}\n                >\n                  Удалить\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Route, HashRouter, NavLink, Redirect } from \"react-router-dom\";\n\nimport Transfer from \"./components/Transfer/Transfer\";\nimport History from \"./components/History/History\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    let parsed = JSON.parse(localStorage.getItem(\"state\"));\n    if (parsed === null) parsed = [];\n\n    this.setTableRow = (action, index) => {\n      if (action === \"add\") {\n        let {\n          payerNumber1,\n          payerNumber2,\n          payerNumber3,\n          payerNumber4,\n          recipientNumber1,\n          recipientNumber2,\n          recipientNumber3,\n          recipientNumber4\n        } = this.state;\n\n        let obj = {\n          payerNumber: `${payerNumber1} ${payerNumber2} ${payerNumber3} ${payerNumber4}`,\n          recipientNumber: `${recipientNumber1} ${recipientNumber2} ${recipientNumber3} ${recipientNumber4}`,\n          amount: this.state.amount,\n          date: this.state.date\n        };\n\n        parsed.push(obj);\n      }\n      if (action === \"remove\") {\n        parsed.splice(index, 1);\n      }\n\n      this.setState({ rows: parsed });\n\n      let serial = JSON.stringify(parsed);\n      localStorage.setItem(\"state\", serial);\n\n      this.clearState();\n    };\n\n    this.state = {\n      payerNumber1: null,\n      payerNumber2: null,\n      payerNumber3: null,\n      payerNumber4: null,\n      cardholder: null,\n      expiryMonth: null,\n      expiryYear: null,\n      recipientNumber1: null,\n      recipientNumber2: null,\n      recipientNumber3: null,\n      recipientNumber4: null,\n      amount: null,\n      isValid: false,\n      date: new Date().toLocaleDateString(),\n      rows: parsed\n    };\n  }\n\n  clearState = () => {\n    this.setState({\n      payerNumber1: null,\n      payerNumber2: null,\n      payerNumber3: null,\n      payerNumber4: null,\n      cardholder: null,\n      expiryMonth: null,\n      expiryYear: null,\n      recipientNumber1: null,\n      recipientNumber2: null,\n      recipientNumber3: null,\n      recipientNumber4: null,\n      amount: null,\n      isValid: false\n    });\n  };\n\n  setValid = () => {\n    const { date, rows, isValid, ...obj } = this.state;\n\n    const value = Object.keys(obj).every(key => obj[key] !== null);\n    this.setState({ isValid: value });\n  };\n\n  setData = (field, value, name) => {\n    if (field === \"amount\") this.setState({ amount: value });\n    if (field === \"cardholder\") this.setState({ cardholder: value });\n    if (field === \"number\") this.setState({ [name]: value });\n  };\n\n  setExpiryDate = (field, value) => {\n    if (field === \"month\") {\n      this.setState({ expiryMonth: value }, () => this.setValid());\n    }\n\n    if (field === \"year\") {\n      this.setState({ expiryYear: value }, () => this.setValid());\n    }\n  };\n\n  handleEvent = (field, state) => event => {\n    const { value, name } = event.target;\n    const patternAmount = value.match(/^\\d{1,5}(\\.\\d{0,2})?$/);\n    const patternCardholder = value.match(/^[A-Za-z]{1,10}$/);\n    const patternNumber = value.match(/^\\d{4}$/);\n\n    if (state === \"focus\" && value === \"\") this.changeClass(event, \"focus\");\n\n    if (state === \"change\") {\n      if (field === \"amount\" && patternAmount) {\n        this.changeClass(event, \"valid\");\n        this.setData(\"amount\", value, null);\n      } else if (field === \"cardholder\" && patternCardholder) {\n        this.changeClass(event, \"valid\");\n        this.setData(\"cardholder\", value, null);\n      } else if (field === \"number\" && patternNumber) {\n        this.changeClass(event, \"valid\");\n        this.setData(\"number\", value, name);\n      } else {\n        this.changeClass(event, \"invalid\");\n        if (field === \"number\") {\n          this.setData(\"number\", null, name);\n        } else {\n          this.setData(field, null, null);\n        }\n      }\n    }\n\n    if (state === \"blur\") {\n      if (value !== \"\") this.setValid();\n      else if (value === \"\") {\n        this.changeClass(event, \"blur\");\n        this.setValid();\n      } else if (\n        (field === \"amount\" && !patternAmount) ||\n        (field === \"cardholder\" && !patternCardholder) ||\n        (field === \"number\" && !patternNumber)\n      ) {\n        this.changeClass(event, \"blur\");\n      } else {\n        this.setValid();\n      }\n    }\n  };\n\n  changeClass = (event, state) => {\n    const target = event.target;\n    target.className = target.classList[0];\n    if (state !== \"blur\") target.classList.add(`${target.className}_${state}`);\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"app\">\n          <header className=\"app__header\">\n            <h1 className=\"app__headline\">Переводы с карты на карту</h1>\n            <div className=\"app__navbar\">\n              <NavLink\n                className=\"app__link\"\n                activeClassName=\"app__link_active\"\n                to=\"/transfer\"\n              >\n                Создание перевода\n              </NavLink>\n              <NavLink\n                className=\"app__link\"\n                activeClassName=\"app__link_active\"\n                to=\"/history\"\n              >\n                История\n              </NavLink>\n            </div>\n          </header>\n          <main className=\"app__body\">\n            <Route path=\"/\">\n              <Redirect to=\"/transfer\" />\n            </Route>\n            <Route path=\"/transfer\">\n              <Transfer\n                state={this.state}\n                setExpiryDate={this.setExpiryDate}\n                setTableRow={this.setTableRow}\n                handleEvent={this.handleEvent}\n              />\n            </Route>\n            <Route path=\"/history\">\n              <History state={this.state} setTableRow={this.setTableRow} />\n            </Route>\n          </main>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}